name: Build & Deploy Front (Angular)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build (production)
        run: npm run build -- --configuration production

      # Descobre automaticamente a subpasta gerada dentro de dist/
      - name: Find dist folder
        id: finddist
        shell: bash
        run: |
          set -e
          APP_DIR="$(ls -d dist/*/ | head -n 1)"
          APP_DIR="${APP_DIR%/}"
          echo "dist_dir=$APP_DIR" >> "$GITHUB_OUTPUT"
          echo "Found dist at: $APP_DIR"
          echo "Conteúdo:"
          ls -la "$APP_DIR"

      # Empacota apenas o CONTEÚDO de dist/<app> (ponto final é importante!)
      - name: Pack dist
        shell: bash
        run: |
          mkdir -p package
          tar -czf package/dist.tar.gz -C "${{ steps.finddist.outputs.dist_dir }}" .

      # Teste rápido de SSH
      - name: SSH smoke test
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          port: 22
          timeout: 60s
          script: |
            uname -a
            ls -la /root/apps/mindsteps/web || true

      # Upload do pacote
      - name: Upload dist.tar.gz via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          port: 22
          timeout: 120s
          source: "package/dist.tar.gz"
          target: "/root/apps/mindsteps/web/tmp_dist"

      # Deploy atômico: extrai em staging e sincroniza em /web/dist
      - name: Atomic replace dist
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          port: 22
          timeout: 120s
          script: |
            set -e
            mkdir -p /root/apps/mindsteps/web/dist \
                     /root/apps/mindsteps/web/tmp_dist \
                     /root/apps/mindsteps/web/dist_new

            # Garante rsync e tar instalados
            if ! command -v rsync >/dev/null 2>&1; then
              apt-get update -y && apt-get install -y rsync
            fi
            if ! command -v tar >/dev/null 2>&1; then
              apt-get update -y && apt-get install -y tar
            fi

            # Extrai apenas o CONTEÚDO para uma pasta staging
            tar -xzf /root/apps/mindsteps/web/tmp_dist/dist.tar.gz -C /root/apps/mindsteps/web/dist_new

            # Sincroniza conteúdo para dist/ (sem criar dist/dist)
            rsync -a --delete /root/apps/mindsteps/web/dist_new/ /root/apps/mindsteps/web/dist/

            # Limpeza
            rm -rf /root/apps/mindsteps/web/tmp_dist /root/apps/mindsteps/web/dist_new
